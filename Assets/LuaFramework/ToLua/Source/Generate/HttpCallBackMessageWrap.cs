//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class HttpCallBackMessageWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(HttpCallBackMessage), typeof(System.Object));
		L.RegFunction("New", _CreateHttpCallBackMessage);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Data", get_Data, set_Data);
		L.RegVar("Code", get_Code, set_Code);
		L.RegVar("ErroMsg", get_ErroMsg, set_ErroMsg);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateHttpCallBackMessage(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				HttpCallBackMessage obj = new HttpCallBackMessage();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: HttpCallBackMessage.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Data(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HttpCallBackMessage obj = (HttpCallBackMessage)o;
			LitJson.JsonData ret = obj.Data;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Data on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Code(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HttpCallBackMessage obj = (HttpCallBackMessage)o;
			HttpCode ret = obj.Code;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Code on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ErroMsg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HttpCallBackMessage obj = (HttpCallBackMessage)o;
			string ret = obj.ErroMsg;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ErroMsg on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Data(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HttpCallBackMessage obj = (HttpCallBackMessage)o;
			LitJson.JsonData arg0 = (LitJson.JsonData)ToLua.CheckObject<LitJson.JsonData>(L, 2);
			obj.Data = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Data on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Code(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HttpCallBackMessage obj = (HttpCallBackMessage)o;
			HttpCode arg0 = (HttpCode)ToLua.CheckObject(L, 2, typeof(HttpCode));
			obj.Code = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Code on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ErroMsg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HttpCallBackMessage obj = (HttpCallBackMessage)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.ErroMsg = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ErroMsg on a nil value");
		}
	}
}

