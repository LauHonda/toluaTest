//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class HttpBaseBLLWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(HttpBaseBLL), typeof(HttpBase));
		L.RegFunction("UpdateData", UpdateData);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Data", get_Data, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				HttpBaseBLL obj = (HttpBaseBLL)ToLua.CheckObject<HttpBaseBLL>(L, 1);
				LitJson.JsonData arg0 = (LitJson.JsonData)ToLua.CheckObject<LitJson.JsonData>(L, 2);
				obj.UpdateData(arg0);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<LitJson.JsonData>(L, 3))
			{
				HttpBaseBLL obj = (HttpBaseBLL)ToLua.CheckObject<HttpBaseBLL>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				LitJson.JsonData arg1 = (LitJson.JsonData)ToLua.ToObject(L, 3);
				obj.UpdateData(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string>(L, 3))
			{
				HttpBaseBLL obj = (HttpBaseBLL)ToLua.CheckObject<HttpBaseBLL>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				obj.UpdateData(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: HttpBaseBLL.UpdateData");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Data(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HttpBaseBLL obj = (HttpBaseBLL)o;
			Http ret = obj.Data;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Data on a nil value");
		}
	}
}

